rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is owner
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - anyone can read, only owner can write
    match /users/{userId} {
      allow read: if true;  // Public profiles for leaderboard
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;  // Never allow deletion
    }
    
    // Predict battles - authenticated users can read/create
    match /predictBattles/{battleId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false;  // No updates after creation
      allow delete: if false;
    }
    
    // Battles - authenticated users can read/create, functions can update
    match /battles/{battleId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false;  // Only Cloud Functions (will add service account)
      allow delete: if false;
    }
    
    // Leaderboard - public read, only functions can write
    match /leaderboard/{userId} {
      allow read: if true;  // Public leaderboard
      allow write: if false;  // Only Cloud Functions
    }
    
    // NFT Rewards - public read only
    match /nftRewards/{rewardId} {
      allow read: if true;  // Everyone can see NFT metadata
      allow write: if false;  // Only admin/seed script
    }
  }
}

